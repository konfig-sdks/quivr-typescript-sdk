/*
FastAPI

Open-source RAG Framework

The version of the OpenAPI document: 0.1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  ApiKeyApi,
  BrainApi,
  BrainSubscriptionApi,
  ChatApi,
  ContactApi,
  CrawlApi,
  HealthApi,
  KnowledgeApi,
  NotificationApi,
  OnboardingApi,
  PromptApi,
  RootApi,
  SubscriptionApi,
  UploadApi,
  UserApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { QuivrCustom } from "./client-custom";

export class Quivr extends QuivrCustom {
  readonly apiKey: ApiKeyApi;
  readonly brain: BrainApi;
  readonly brainSubscription: BrainSubscriptionApi;
  readonly chat: ChatApi;
  readonly contact: ContactApi;
  readonly crawl: CrawlApi;
  readonly health: HealthApi;
  readonly knowledge: KnowledgeApi;
  readonly notification: NotificationApi;
  readonly onboarding: OnboardingApi;
  readonly prompt: PromptApi;
  readonly root: RootApi;
  readonly subscription: SubscriptionApi;
  readonly upload: UploadApi;
  readonly user: UserApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.apiKey = new ApiKeyApi(configuration);
    this.brain = new BrainApi(configuration);
    this.brainSubscription = new BrainSubscriptionApi(configuration);
    this.chat = new ChatApi(configuration);
    this.contact = new ContactApi(configuration);
    this.crawl = new CrawlApi(configuration);
    this.health = new HealthApi(configuration);
    this.knowledge = new KnowledgeApi(configuration);
    this.notification = new NotificationApi(configuration);
    this.onboarding = new OnboardingApi(configuration);
    this.prompt = new PromptApi(configuration);
    this.root = new RootApi(configuration);
    this.subscription = new SubscriptionApi(configuration);
    this.upload = new UploadApi(configuration);
    this.user = new UserApi(configuration);
  }

}
